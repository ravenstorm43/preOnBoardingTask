name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: build
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: preOnBoardingTask
          path: build/libs/preOnBoardingTask-0.0.1-SNAPSHOT.jar

      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/preonboardingtask:latest .

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: DockerHub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/preonboardingtask:latest


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: AWS EC2 Connection
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        timeout: 60s
        script: |
          sudo docker stop preonboardingtask || true
          sudo docker rm preonboardingtask || true
          
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" | sudo tee /home/ubuntu/.env
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/preonboardingtask:latest
          sudo docker run -d -p 8080:8080 --name preonboardingtask --env-file /home/ubuntu/.env ${{ secrets.DOCKERHUB_USERNAME }}/preonboardingtask:latest