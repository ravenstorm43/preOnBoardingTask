name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: build
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: preOnBoardingTask
          path: build/libs/preOnBoardingTask-0.0.1-SNAPSHOT.jar

      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/preonboardingtask:latest .

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: DockerHub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/preOnBoardingTask:latest


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: preOnBoardingTask
        path: build/libs/
        
    - name: Deploy to EC2
      run: |
        export JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
        echo "${{ secrets.EC2_SSH_KEY }}" > mykeypair.pem
        chmod 600 mykeypair.pem
        scp -i mykeypair.pem -o StrictHostKeyChecking=no build/libs/preOnBoardingTask-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/preOnBoardingTask.jar
        ssh -i mykeypair.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "kill -9 `pgrep java`"
        continue-on-error: true
        ssh -i mykeypair.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "nohup java -jar /home/${{ secrets.EC2_USERNAME }}/preOnBoardingTask.jar > app.log 2>&1 &"
        rm -f mykeypair.pem
